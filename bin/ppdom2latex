#!/usr/bin/env perl

######################################################################
#
# A sample PseudoPod to LaTeX converter script that uses Pod::PseudoPod::DOM.
#
# usage:
#
# $ pdom2latex filename1.pod filename2.pod
#
# Will produce one html file for each pod file passed in.
#
#   filename1.tex
#   filename2.tex
#
######################################################################

use strict;
use warnings;
use autodie;

use Pod::PseudoPod::DOM;
use File::Basename;

for my $file (@ARGV)
{
    # LaTeX output goes to the current working
    # directory not the source directory.
    my $outfile = fileparse( $file, qr{\..*} ) . '.tex';

    my $parser  = Pod::PseudoPod::DOM->new(
        formatter_role => 'Pod::PseudoPod::DOM::Role::LaTeX',
        filename       => $outfile,
    );

    my $fh = open_fh( $outfile, '>' );
    $parser->output_fh($fh);

    $parser->no_errata_section(1); # don't put errors in doc output
    $parser->complain_stderr(1);   # output errors on STDERR instead

    die "Unable to open file\n" unless -e $file;
    $parser->parse_file( open_fh( $file ) );
    my $doc = $parser->get_document;
    print {$fh} $doc->emit;

    while (my ($name, $contents) = each %{ $doc->tables })
    {
        my $fh = open_fh( $name, '>' );
        print {$fh} $contents;
    }
}

sub open_fh
{
    my ($file, $mode) = @_;

    # default to reading
    $mode ||= '<';

    open my $fh, $mode . ':utf8', $file;
    return $fh;
}

exit;
